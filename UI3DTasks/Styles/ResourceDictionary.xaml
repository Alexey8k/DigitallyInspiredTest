<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="http://helix-toolkit.org/wpf"
                    xmlns:vm="clr-namespace:UI3DTasks.ViewModels"
                    xmlns:cc="clr-namespace:UI3DTasks.CustomControls"
                    xmlns:ap="clr-namespace:UI3DTasks.AttachedProperties">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SliderTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush x:Key="SeparatorBackground" Color="DimGray" />

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="ap:TextBlock.CharacterCasing" Value="Upper" />
    </Style>

    <Style x:Key="VerticalSeparator" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource SeparatorBackground}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="3" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource SeparatorBackground}" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="3" />
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="Task3DItemTemplate">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin" Value="5" />
            </Style>
        </DataTemplate.Resources>
        <StackPanel x:Name="Container">
            <TextBlock Text="{Binding Name}" />
            <Separator x:Name="Separator" Style="{StaticResource HorizontalSeparator}" />
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Container" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5 1" StartPoint="0.5 0">
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="Violet" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Separator" Property="Background" Value="BlueViolet" />
                <Setter Property="ToolTip" Value="{Binding Name}"/>
            </Trigger>
            <Trigger Property="cc:EasyListView.IsSelected" Value="True">
                <Setter TargetName="Container" Property="Background" Value="Violet" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="Task3DListItemsControl" TargetType="{x:Type cc:EasyListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:EasyListView}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource Task3DItemTemplate}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.MinWidth" Value="157"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="1"
                                   StrokeThickness="1"
                                   Stroke="MediumOrchid">
                            <Rectangle.Effect>
                                <DropShadowEffect Color="MediumOrchid" ShadowDepth="0" BlurRadius="7" />
                            </Rectangle.Effect>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="ControlMouseOverColor">BlueViolet</Color>

    <Color x:Key="ControlPressedColor">Violet</Color>
    <Color x:Key="PressedBorderColor">BlueViolet</Color>

    <Color x:Key="DisabledControlColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>
    <Color x:Key="DisabledBorderColor">#FF888888</Color>

    <Style x:Key="ControlPanelButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1.7" />
        <Setter Property="Padding" Value="7 3" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}">
                        <Border.Background>
                            <RadialGradientBrush Center="0.5 0.5" RadiusX="0.7" RadiusY="0.7" GradientOrigin="0.5 0.5">
                                <GradientStop Color="Transparent" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1" />
                            </RadialGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:ControlPanelViewModel}">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ControlPanelButton}" />
        </DataTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Load" Command="{Binding LoadCommand}" />
            <Button x:Name="ClearButton" Grid.Column="2" Content="Clear" Command="{Binding ClearCommand}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DataContext.Model3D,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Null}">
                <Setter TargetName="ClearButton" Property="IsEnabled" Value="False" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ZAxisMovementControlPanelViewModel}">
        <DataTemplate.Resources>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ControlPanelButton}" />
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource {x:Type Slider}}">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Width" Value="97" />
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="FontSize" Value="9" />
            </Style>
        </DataTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="9" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="Min Z" />
                <Slider Grid.Column="2" Grid.Row="0" Minimum="-25" Maximum="-5" Value="{Binding ZMin}" />
                <Label Grid.Column="0" Grid.Row="1" Content="Max Z" />
                <Slider Grid.Column="2" Grid.Row="1" Minimum="5" Maximum="25" Value="{Binding ZMax}" />
            </Grid>
            <Button Grid.Column="2" Content="Start" Command="{Binding StartCommand}" />
            <Button Grid.Column="4" Content="Stop" Command="{Binding StopCommand}" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:Task3DViewModel}">
        <!--<DataTemplate x:Key="Task3DataTemplate">-->
        <DataTemplate.Resources>
            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource HorizontalSeparator}">
                <Setter Property="Margin" Value="0 5" />
            </Style>
        </DataTemplate.Resources>
        <DockPanel>
            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0" Content="{Binding ControlPanelViewModel}" IsTabStop="False" />
                <ContentControl x:Name="ZAxisMovementControlPanelViewModel" Grid.Column="1" IsTabStop="False"
                                Content="{Binding ZAxisMovementControlPanelViewModel}"
                                Margin="9 0"
                                HorizontalAlignment="Center"/>
            </Grid>

            <Separator DockPanel.Dock="Bottom" />
            <h:HelixViewport3D ZoomExtentsWhenLoaded="True">
                <h:SunLight />
                <ModelVisual3D Content="{Binding Model3D}" />
            </h:HelixViewport3D>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Model3D}" Value="{x:Null}">
                <Setter TargetName="ZAxisMovementControlPanelViewModel" Property="IsEnabled" Value="False" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>